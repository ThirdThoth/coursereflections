Lesson 2
Udacity How to Use Git and GitHub
Reflections

Initializing a repository creates a preliminary .git folder,
this indicates that this location is now a repository.
This initialization does not create a first commit: there are no commits yet.
This initialization only requires the command git init to execute.
If you don't initiate, then nothing is ever told to make a repository!
The stating area is a way to move exactly what you want into your repository.
It's useful, as it allows for a commit to be more properly prepared before submission.
Staging area can help ensure that you only have one commit per logical change,
Even if you are working on multiple details at once, at least in different files.
You can use the staging area to prepare your commit,
and then the commands git diff and more important git diff --staged to compare.
Branches could be helpful for a lot of functions, it seems to me.
In particular, creating sub-versions of a project which may diverge.
It could also be good for keeping an official version running,
Even while a trial public test version is being updated in a separate branch.
A new question is how do diagrams help you visualize the branch structure?
I suppose the answer is very blunt: they let you visualize branch structure.  You know.
By presenting visuals of it.  It makes it very clear how branches work.
This is definitely a good example of a case where diagrams are a very useful tool.
Merging two branches together allows for the combination of two sets of code.
But man I bet it's nigh impossible to do without conflicts, I don't understand
how it could possibly work in more complicated code?  Maybe they will discuss it.


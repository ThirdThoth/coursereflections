Using Git and Github
Lesson 3
Reflections

Remote repositories have the potential to be extremely useful in the basic context of cloud computing.
They allow for files to be shared over multiple computers through the internet as a medium,
as well as allowing multiple individuals to share access and editing controls into a single repository.
It is potentially risky to pull changes automatically, for similar risks as automatic commits.
I'm not really sure what the big risk is here.  I suppose theoretically, there might be problems
with the online version, and it is safer to only pull manually, or the online master might be 
halfway through a set of edits, while you are working on a separate project.  But wouldn't your
separate project be best to do on a branch?
This is great.  I love git and github.  Seriously.
So branches are used to create multiple paths within a single repository, be it git or github.
This allows for multiple sets of edits or versions of the project to be edited simultaneously.
Cloning allows a complete copy of a repository, good for transition from github to local.
It can also be used to copy, backup, share, whatever.
Forking is for sharing between creators, entirely on github, of entire repositories.
It allows the copying of a github repository over into a different user's account,
and comes with useful tracking too.
By having a last-known-state copy of the remote, it becomes much easier to track changes.
It lets you observe differences between the local and the remote,
and it allows for manual merging as desired.
Collaborating is much easier with Git and GitHub.  Without them, I would collaborate over
google docs (which does have some of its own version control) but that is for word processing
and would be a horrible mess to use for programming.  Even more likely, I would probably
collaborate using something like dropbox.  What a travesty.
